package {{ .Conf.Package }}

import (
	"database/sql"

	"github.com/rs/zerolog"
)

// GENERATED BY CODEGEN. 

type TimeSec5 struct{}

// Match satisfies sqlmock.Argument interface
func (a TimeSec5) Match(v driver.Value) bool {
	switch i := v.(type) {
	case int64:
		if int64(stime.Now())-i > 5 {
			return false
		}
	default:
		return false
	}
	return true
}

func init() {
	zerolog.SetGlobalLevel(zerolog.ErrorLevel)
	gofakeit.Seed(1)
}

func insertQuery() (*sql.DB, error) {
	newResultDSN("bench", QueryResult{
		ResultRows: &ResultRows{
			NumRows: 1,
		},
		NumInput: -1,
	})
	return sql.Open("mimic", "bench")
}

func selectQuery(cols []string) (*sql.DB, error) {
	newResultDSN("bench", QueryResult{
		Query: &Query{
			Cols: cols,
			Vals: [][]driver.Value{},
		},
	})
	return sql.Open("mimic", "bench")
}

// ^^ END OF GENERATED BY CODEGEN. ^^
